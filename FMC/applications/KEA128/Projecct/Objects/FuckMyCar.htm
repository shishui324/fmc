<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\FuckMyCar.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\FuckMyCar.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Thu Apr 19 17:14:18 2018
<BR><P>
<H3>Maximum Stack Usage =        272 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
PIT_CH0_IRQHandler &rArr; control &rArr; motor_pid_caculate &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[16]">ACMP0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">ACMP0_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[16]">ACMP0_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[1b]">ACMP1_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[15]">ADC_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[17]">FTM0_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[18]">FTM1_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[19]">FTM2_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[b]">FTMRE_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[e]">I2C0_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[f]">I2C1_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[21]">ICS_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[d]">IRQ_IRQHandler</a> from isr.o(i.IRQ_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[1e]">KBI0_IRQHandler</a> from isr.o(i.KBI0_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[1f]">KBI1_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[24]">MSCAN_RX_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[25]">MSCAN_TX_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[1c]">PIT_CH0_IRQHandler</a> from isr.o(i.PIT_CH0_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[1d]">PIT_CH1_IRQHandler</a> from isr.o(i.PIT_CH1_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[c]">PMC_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[23]">PWT_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[1a]">RTC_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[6]">Reserved16_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[7]">Reserved17_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[8]">Reserved18_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[9]">Reserved19_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[a]">Reserved20_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[20]">Reserved42_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[10]">SPI0_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[11]">SPI1_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[27]">Start</a> from system_skeaz1284.o(i.Start) referenced from startup_skeaz1284.o(.text)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[12]">UART0_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[13]">UART1_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[14]">UART2_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[22]">WDOG_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[29]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_skeaz1284.o(.text)
 <LI><a href="#[2a]">_snputc</a> from printfa.o(i._snputc) referenced from printfa.o(i.__0snprintf)
 <LI><a href="#[2b]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[2b]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0vsprintf)
 <LI><a href="#[28]">init_data_bss</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(.text)
 <LI><a href="#[26]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[29]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(.text)
</UL>
<P><STRONG><a name="[c1]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2c]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[4d]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[c2]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[c3]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[c4]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[c5]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[c6]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[28]"></a>init_data_bss</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(.text)
</UL>
<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>ACMP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMP0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMP0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>ACMP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[c7]"></a>DefaultISR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text), UNUSED)

<P><STRONG><a name="[17]"></a>FTM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>FTM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>FTM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>FTMRE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>ICS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>KBI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>MSCAN_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>MSCAN_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>PWT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>Reserved16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>Reserved17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>Reserved18_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>Reserved19_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>Reserved20_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>Reserved42_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>WDOG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[c8]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_pwm_init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_pwm_duty
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_clk
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_20ms_serve
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT_CH0_IRQHandler
</UL>

<P><STRONG><a name="[c9]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[2e]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_sensor
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_8_L
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bell_Play
</UL>

<P><STRONG><a name="[ca]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[ac]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_clk
</UL>

<P><STRONG><a name="[cb]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[cc]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[cd]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[30]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[5a]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Speed
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Servo
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Right_motor
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Left_motor
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Speed
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Servo
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Right_motor
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Left_motor
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_printf
</UL>

<P><STRONG><a name="[ce]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[32]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[33]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;servo_pid_caculate
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_adc_int_value
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deal_sensor
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_pid_caculate
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>

<P><STRONG><a name="[36]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deal_sensor
</UL>

<P><STRONG><a name="[37]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[88]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_one_sensor
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;servo_pid_caculate
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_adc_int_value
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_pid_caculate
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Servo
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Right_motor
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Left_motor
</UL>

<P><STRONG><a name="[38]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_one_sensor
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;servo_pid_caculate
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_adc_int_value
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deal_sensor
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Servo
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Right_motor
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Left_motor
</UL>

<P><STRONG><a name="[39]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_sensor
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;servo_pid_caculate
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_1cm_error
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_pid_caculate
</UL>

<P><STRONG><a name="[3a]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_sensor
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_UI
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_adc_int_value
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Servo
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Right_motor
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Left_motor
</UL>

<P><STRONG><a name="[3b]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeParameterVal
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_pid_caculate
</UL>

<P><STRONG><a name="[3d]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeParameterVal
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_adc_int_value
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deal_sensor
</UL>

<P><STRONG><a name="[9f]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_sensor
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;servo_pid_caculate
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_pid_caculate
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_20ms_serve
</UL>

<P><STRONG><a name="[cf]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cfcmple.o(.text), UNUSED)

<P><STRONG><a name="[b7]"></a>__aeabi_cfcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;servo_pid_caculate
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_pid_caculate
</UL>

<P><STRONG><a name="[62]"></a>Key_Inquire_data</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, car_key.o(i.Key_Inquire_data))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigParameterCore
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeParameterVal
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_10ms_serve
</UL>

<P><STRONG><a name="[d0]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[d1]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[3e]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeParameterVal
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_pid_caculate
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[42]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeParameterVal
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_pid_caculate
</UL>

<P><STRONG><a name="[43]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[44]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_adc_int_value
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deal_sensor
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_pid_caculate
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[45]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deal_sensor
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[89]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_one_sensor
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Servo
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Right_motor
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Left_motor
</UL>

<P><STRONG><a name="[46]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_d2iz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeParameterVal
</UL>

<P><STRONG><a name="[48]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2uiz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeParameterVal
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_adc_int_value
</UL>

<P><STRONG><a name="[56]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_circle
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Servo_PID
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Right_Motor_PID
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Main_menu
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Left_Motor_PID
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_Main_menu
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeParameterVal
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_pid_caculate
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_P6x8floatNum
</UL>

<P><STRONG><a name="[98]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[49]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeParameterVal
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deal_sensor
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_pid_caculate
</UL>

<P><STRONG><a name="[9d]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;servo_pid_caculate
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_pid_caculate
</UL>

<P><STRONG><a name="[4a]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[3f]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[d2]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[47]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[d3]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[40]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[d4]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[35]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>

<P><STRONG><a name="[34]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>

<P><STRONG><a name="[41]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[3c]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[4c]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2d]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[d5]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[b8]"></a>Bell_Cry</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bb.o(i.Bell_Cry))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;servo_pid_caculate
</UL>

<P><STRONG><a name="[4e]"></a>Bell_Play</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, bb.o(i.Bell_Play))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Bell_Play &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT_CH0_IRQHandler
</UL>

<P><STRONG><a name="[50]"></a>Cache_OLED_P6x8Num</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, oled.o(i.Cache_OLED_P6x8Num))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Cache_OLED_P6x8Num &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_WriteData
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_Set_Pos
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_sensor
</UL>

<P><STRONG><a name="[54]"></a>Cache_OLED_P6x8Str</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, oled.o(i.Cache_OLED_P6x8Str))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Cache_OLED_P6x8Str
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_WriteData
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_Set_Pos
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_speed
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Servo_PID
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Right_Motor_PID
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Main_menu
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Left_Motor_PID
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigParameterCore
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_Main_menu
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_printf
</UL>

<P><STRONG><a name="[55]"></a>Cache_OLED_P6x8floatNum</STRONG> (Thumb, 124 bytes, Stack size 64 bytes, oled.o(i.Cache_OLED_P6x8floatNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Cache_OLED_P6x8floatNum &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_WriteData
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_Set_Pos
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_sensor
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_UI
</UL>

<P><STRONG><a name="[58]"></a>Cache_OLED_Rectangle</STRONG> (Thumb, 282 bytes, Stack size 44 bytes, oled.o(i.Cache_OLED_Rectangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Cache_OLED_Rectangle
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_WriteData
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_Set_Pos
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_sensor
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_one_sensor
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_8_L
</UL>

<P><STRONG><a name="[52]"></a>Cache_OLED_Set_Pos</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, oled.o(i.Cache_OLED_Set_Pos))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_Rectangle
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_P6x8floatNum
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_P6x8Str
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_P6x8Num
</UL>

<P><STRONG><a name="[53]"></a>Cache_OLED_WriteData</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, oled.o(i.Cache_OLED_WriteData))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_Rectangle
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_P6x8floatNum
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_P6x8Str
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_P6x8Num
</UL>

<P><STRONG><a name="[59]"></a>Cache_OLED_printf</STRONG> (Thumb, 60 bytes, Stack size 64 bytes, oled.o(i.Cache_OLED_printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Cache_OLED_printf &rArr; Cache_OLED_P6x8Str
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_P6x8Str
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_run_time
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_one_sensor
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_circle
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_8_L
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_speed
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Servo_PID
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Right_Motor_PID
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Main_menu
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Left_Motor_PID
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_Main_menu
</UL>

<P><STRONG><a name="[5c]"></a>Cache_Update_OLED</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, oled.o(i.Cache_Update_OLED))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Cache_Update_OLED &rArr; OLED_Set_Pos &rArr; OLED_WriteCmd &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WriteData
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Set_Pos
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_10ms_serve
</UL>

<P><STRONG><a name="[5f]"></a>Car_Gather_Data_Key</STRONG> (Thumb, 362 bytes, Stack size 12 bytes, car_key.o(i.Car_Gather_Data_Key))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Car_Gather_Data_Key &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Message_Init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_10ms_serve
</UL>

<P><STRONG><a name="[61]"></a>ChangeParameterVal</STRONG> (Thumb, 574 bytes, Stack size 40 bytes, myui.o(i.ChangeParameterVal))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ChangeParameterVal &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Inquire_data
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_menu
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Servo_menu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right_Motor_menu
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left_Motor_menu
</UL>

<P><STRONG><a name="[63]"></a>Change_Main_menu</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, myui.o(i.Change_Main_menu))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Change_Main_menu &rArr; Cache_OLED_printf &rArr; Cache_OLED_P6x8Str
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_printf
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_P6x8Str
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_UI
</UL>

<P><STRONG><a name="[64]"></a>Change_UI</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, myui.o(i.Change_UI))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Change_UI &rArr; Speed_menu &rArr; ChangeParameterVal &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_menu
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_speed
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Servo_PID
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Right_Motor_PID
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Left_Motor_PID
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Servo_menu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right_Motor_menu
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left_Motor_menu
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_Main_menu
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ConfigParameter
</UL>

<P><STRONG><a name="[6d]"></a>ConfigParameterCore</STRONG> (Thumb, 1112 bytes, Stack size 8 bytes, myui.o(i.ConfigParameterCore))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ConfigParameterCore &rArr; OLED_Init &rArr; OLED_Set_Pos &rArr; OLED_WriteCmd &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Inquire_data
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_P6x8Str
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ConfigParameter
</UL>

<P><STRONG><a name="[6f]"></a>FLASH_EraseSector</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, kea128_flash.o(i.FLASH_EraseSector))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FLASH_EraseSector &rArr; FlashCmdStart
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashCmdStart
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Speed
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Servo
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Right_motor
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Left_motor
</UL>

<P><STRONG><a name="[71]"></a>FLASH_Init</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, kea128_flash.o(i.FLASH_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FLASH_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Speed
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Servo
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Right_motor
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Left_motor
</UL>

<P><STRONG><a name="[72]"></a>FLASH_WriteSector</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, kea128_flash.o(i.FLASH_WriteSector))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FLASH_WriteSector &rArr; FlashCmdStart
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashCmdStart
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Speed
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Servo
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Right_motor
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Left_motor
</UL>

<P><STRONG><a name="[70]"></a>FlashCmdStart</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, kea128_flash.o(i.FlashCmdStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FlashCmdStart
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WriteSector
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseSector
</UL>

<P><STRONG><a name="[d]"></a>IRQ_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, isr.o(i.IRQ_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>KBI0_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, isr.o(i.KBI0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>Key_Message_Init</STRONG> (Thumb, 440 bytes, Stack size 4 bytes, car_key.o(i.Key_Message_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Key_Message_Init &rArr; Car_Gather_Data_Key &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_Gather_Data_Key
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[69]"></a>Left_Motor_menu</STRONG> (Thumb, 234 bytes, Stack size 8 bytes, myui.o(i.Left_Motor_menu))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Left_Motor_menu &rArr; ChangeParameterVal &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Left_Motor_PID
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeParameterVal
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Left_motor
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Left_motor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_P6x8Str
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_CLS
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_UI
</UL>

<P><STRONG><a name="[75]"></a>OLED_CLS</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, oled.o(i.OLED_CLS))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OLED_CLS &rArr; OLED_WriteData &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WriteData
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WriteCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_menu
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Servo_menu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right_Motor_menu
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left_Motor_menu
</UL>

<P><STRONG><a name="[7a]"></a>OLED_ConfigParameter</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, myui.o(i.OLED_ConfigParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = OLED_ConfigParameter &rArr; Change_UI &rArr; Speed_menu &rArr; ChangeParameterVal &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_UI
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigParameterCore
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_UI
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_10ms_serve
</UL>

<P><STRONG><a name="[7c]"></a>OLED_Fill</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, oled.o(i.OLED_Fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OLED_Fill &rArr; OLED_WriteData &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WriteData
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WriteCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
</UL>

<P><STRONG><a name="[6e]"></a>OLED_Init</STRONG> (Thumb, 290 bytes, Stack size 8 bytes, oled.o(i.OLED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = OLED_Init &rArr; OLED_Set_Pos &rArr; OLED_WriteCmd &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WriteCmd
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Set_Pos
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DLY_ms
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_pull
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigParameterCore
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[76]"></a>OLED_P6x8Str</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, oled.o(i.OLED_P6x8Str))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OLED_P6x8Str &rArr; OLED_Set_Pos &rArr; OLED_WriteCmd &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WriteData
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Set_Pos
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_menu
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Servo_menu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right_Motor_menu
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left_Motor_menu
</UL>

<P><STRONG><a name="[1c]"></a>PIT_CH0_IRQHandler</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, isr.o(i.PIT_CH0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = PIT_CH0_IRQHandler &rArr; control &rArr; motor_pid_caculate &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bell_Play
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_num
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_adc_int_value
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deal_sensor
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>PIT_CH1_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, isr.o(i.PIT_CH1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>Read_Left_motor</STRONG> (Thumb, 140 bytes, Stack size 48 bytes, myflash.o(i.Read_Left_motor))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Read_Left_motor &rArr; __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left_Motor_menu
</UL>

<P><STRONG><a name="[84]"></a>Read_Right_motor</STRONG> (Thumb, 144 bytes, Stack size 48 bytes, myflash.o(i.Read_Right_motor))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Read_Right_motor &rArr; __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right_Motor_menu
</UL>

<P><STRONG><a name="[85]"></a>Read_Servo</STRONG> (Thumb, 186 bytes, Stack size 48 bytes, myflash.o(i.Read_Servo))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Read_Servo &rArr; __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Servo_menu
</UL>

<P><STRONG><a name="[86]"></a>Read_Speed</STRONG> (Thumb, 94 bytes, Stack size 48 bytes, myflash.o(i.Read_Speed))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Read_Speed
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_menu
</UL>

<P><STRONG><a name="[6a]"></a>Right_Motor_menu</STRONG> (Thumb, 234 bytes, Stack size 8 bytes, myui.o(i.Right_Motor_menu))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Right_Motor_menu &rArr; ChangeParameterVal &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Right_Motor_PID
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeParameterVal
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Right_motor
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Right_motor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_P6x8Str
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_CLS
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_UI
</UL>

<P><STRONG><a name="[78]"></a>Save_Left_motor</STRONG> (Thumb, 156 bytes, Stack size 56 bytes, myflash.o(i.Save_Left_motor))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Save_Left_motor &rArr; FLASH_WriteSector &rArr; FlashCmdStart
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WriteSector
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseSector
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left_Motor_menu
</UL>

<P><STRONG><a name="[87]"></a>Save_Right_motor</STRONG> (Thumb, 158 bytes, Stack size 56 bytes, myflash.o(i.Save_Right_motor))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Save_Right_motor &rArr; FLASH_WriteSector &rArr; FlashCmdStart
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WriteSector
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseSector
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right_Motor_menu
</UL>

<P><STRONG><a name="[8a]"></a>Save_Servo</STRONG> (Thumb, 200 bytes, Stack size 56 bytes, myflash.o(i.Save_Servo))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Save_Servo &rArr; FLASH_WriteSector &rArr; FlashCmdStart
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WriteSector
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseSector
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Servo_menu
</UL>

<P><STRONG><a name="[8b]"></a>Save_Speed</STRONG> (Thumb, 126 bytes, Stack size 48 bytes, myflash.o(i.Save_Speed))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Save_Speed &rArr; FLASH_WriteSector &rArr; FlashCmdStart
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WriteSector
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseSector
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_menu
</UL>

<P><STRONG><a name="[6b]"></a>Servo_menu</STRONG> (Thumb, 272 bytes, Stack size 8 bytes, myui.o(i.Servo_menu))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Servo_menu &rArr; ChangeParameterVal &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Servo_PID
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeParameterVal
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Servo
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Servo
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_P6x8Str
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_CLS
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_UI
</UL>

<P><STRONG><a name="[65]"></a>Show_Left_Motor_PID</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, myui.o(i.Show_Left_Motor_PID))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Show_Left_Motor_PID &rArr; Cache_OLED_printf &rArr; Cache_OLED_P6x8Str
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_printf
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_P6x8Str
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left_Motor_menu
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_UI
</UL>

<P><STRONG><a name="[8c]"></a>Show_Main_menu</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, myui.o(i.Show_Main_menu))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Show_Main_menu &rArr; Cache_OLED_printf &rArr; Cache_OLED_P6x8Str
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_printf
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_P6x8Str
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_UI
</UL>

<P><STRONG><a name="[66]"></a>Show_Right_Motor_PID</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, myui.o(i.Show_Right_Motor_PID))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Show_Right_Motor_PID &rArr; Cache_OLED_printf &rArr; Cache_OLED_P6x8Str
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_printf
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_P6x8Str
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right_Motor_menu
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_UI
</UL>

<P><STRONG><a name="[67]"></a>Show_Servo_PID</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, myui.o(i.Show_Servo_PID))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Show_Servo_PID &rArr; Cache_OLED_printf &rArr; Cache_OLED_P6x8Str
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_printf
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_P6x8Str
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Servo_menu
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_UI
</UL>

<P><STRONG><a name="[7b]"></a>Show_UI</STRONG> (Thumb, 302 bytes, Stack size 8 bytes, myui.o(i.Show_UI))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Show_UI &rArr; show_one_sensor &rArr; Cache_OLED_printf &rArr; Cache_OLED_P6x8Str
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_sensor
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_run_time
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_one_sensor
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_circle
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_8_L
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Main_menu
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_P6x8floatNum
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ConfigParameter
</UL>

<P><STRONG><a name="[68]"></a>Show_speed</STRONG> (Thumb, 200 bytes, Stack size 8 bytes, myui.o(i.Show_speed))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Show_speed &rArr; Cache_OLED_printf &rArr; Cache_OLED_P6x8Str
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_printf
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_P6x8Str
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_menu
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_UI
</UL>

<P><STRONG><a name="[6c]"></a>Speed_menu</STRONG> (Thumb, 336 bytes, Stack size 8 bytes, myui.o(i.Speed_menu))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Speed_menu &rArr; ChangeParameterVal &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_speed
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeParameterVal
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Speed
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Speed
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_P6x8Str
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_CLS
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_UI
</UL>

<P><STRONG><a name="[27]"></a>Start</STRONG> (Thumb, 76 bytes, Stack size 4 bytes, system_skeaz1284.o(i.Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Start
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disable_wdog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(.text)
</UL>
<P><STRONG><a name="[93]"></a>__0snprintf</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[d6]"></a>__1snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)

<P><STRONG><a name="[57]"></a>__2snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_P6x8floatNum
</UL>

<P><STRONG><a name="[d7]"></a>__c89snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)

<P><STRONG><a name="[d8]"></a>snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)

<P><STRONG><a name="[95]"></a>__0sprintf</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[d9]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[51]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_P6x8Num
</UL>

<P><STRONG><a name="[da]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[db]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[96]"></a>__0vsprintf</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[dc]"></a>__1vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[dd]"></a>__2vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[de]"></a>__c89vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[5b]"></a>vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_printf
</UL>

<P><STRONG><a name="[4b]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[60]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, kea128_ftm.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_pwm_mux
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_menu
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_UI
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Servo_menu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right_Motor_menu
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left_Motor_menu
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_UI
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeParameterVal
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_Gather_Data_Key
</UL>

<P><STRONG><a name="[df]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[e0]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[9b]"></a>ad_init</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, sensor.o(i.ad_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ad_init
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9c]"></a>adc_init</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, kea128_adc.o(i.adc_init))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ad_init
</UL>

<P><STRONG><a name="[aa]"></a>adc_once</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, kea128_adc.o(i.adc_once))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_once
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_adc_int_value
</UL>

<P><STRONG><a name="[83]"></a>control</STRONG> (Thumb, 296 bytes, Stack size 24 bytes, control.o(i.control))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = control &rArr; motor_pid_caculate &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;servo_pid_caculate
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_set
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_pid_caculate
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT_CH0_IRQHandler
</UL>

<P><STRONG><a name="[82]"></a>deal_sensor</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, sensor.o(i.deal_sensor))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = deal_sensor &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_1cm_error
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_max_ad
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT_CH0_IRQHandler
</UL>

<P><STRONG><a name="[92]"></a>disable_wdog</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, system_skeaz1284.o(i.disable_wdog))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start
</UL>

<P><STRONG><a name="[a4]"></a>encode_init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, encode.o(i.encode_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = encode_init &rArr; ftm_count_init &rArr; ftm_count_mux &rArr; port_pull
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_pull
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_count_init
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a2]"></a>find_max_ad</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, sensor.o(i.find_max_ad))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deal_sensor
</UL>

<P><STRONG><a name="[af]"></a>ftm_count_clean</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, kea128_ftm.o(i.ftm_count_clean))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_num
</UL>

<P><STRONG><a name="[ae]"></a>ftm_count_get</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, kea128_ftm.o(i.ftm_count_get))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_num
</UL>

<P><STRONG><a name="[a5]"></a>ftm_count_init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, kea128_ftm.o(i.ftm_count_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ftm_count_init &rArr; ftm_count_mux &rArr; port_pull
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_count_mux
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encode_init
</UL>

<P><STRONG><a name="[a6]"></a>ftm_count_mux</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, kea128_ftm.o(i.ftm_count_mux))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ftm_count_mux &rArr; port_pull
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_pull
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_count_init
</UL>

<P><STRONG><a name="[a7]"></a>ftm_pwm_duty</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, kea128_ftm.o(i.ftm_pwm_duty))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ftm_pwm_duty &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_set
</UL>

<P><STRONG><a name="[a8]"></a>ftm_pwm_init</STRONG> (Thumb, 278 bytes, Stack size 48 bytes, kea128_ftm.o(i.ftm_pwm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = ftm_pwm_init &rArr; ftm_pwm_mux &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_pwm_mux
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
</UL>

<P><STRONG><a name="[a9]"></a>ftm_pwm_mux</STRONG> (Thumb, 290 bytes, Stack size 4 bytes, kea128_ftm.o(i.ftm_pwm_mux))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ftm_pwm_mux &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_pwm_init
</UL>

<P><STRONG><a name="[81]"></a>get_adc_int_value</STRONG> (Thumb, 554 bytes, Stack size 40 bytes, sensor.o(i.get_adc_int_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = get_adc_int_value &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_once
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT_CH0_IRQHandler
</UL>

<P><STRONG><a name="[ab]"></a>get_clk</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, common.o(i.get_clk))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = get_clk &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[80]"></a>get_num</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, encode.o(i.get_num))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = get_num &rArr; gpio_get
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_count_get
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_count_clean
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT_CH0_IRQHandler
</UL>

<P><STRONG><a name="[ad]"></a>gpio_get</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, kea128_gpio.o(i.gpio_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = gpio_get
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_num
</UL>

<P><STRONG><a name="[7d]"></a>gpio_init</STRONG> (Thumb, 214 bytes, Stack size 20 bytes, kea128_gpio.o(i.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encode_init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f]"></a>gpio_set</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, kea128_gpio.o(i.gpio_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WriteData
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WriteCmd
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bell_Play
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_set
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
</UL>

<P><STRONG><a name="[26]"></a>main</STRONG> (Thumb, 274 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = main &rArr; time_10ms_serve &rArr; OLED_ConfigParameter &rArr; Change_UI &rArr; Speed_menu &rArr; ChangeParameterVal &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_clk
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encode_init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Message_Init
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ad_init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_20ms_serve
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_10ms_serve
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[b0]"></a>motor_init</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, motor.o(i.motor_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = motor_init &rArr; ftm_pwm_init &rArr; ftm_pwm_mux &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_pwm_init
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a0]"></a>motor_pid_caculate</STRONG> (Thumb, 460 bytes, Stack size 112 bytes, motor.o(i.motor_pid_caculate))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = motor_pid_caculate &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control
</UL>

<P><STRONG><a name="[a1]"></a>motor_set</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, motor.o(i.motor_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = motor_set &rArr; ftm_pwm_duty &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_pwm_duty
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control
</UL>

<P><STRONG><a name="[bd]"></a>pit_close</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, kea128_pit.o(i.pit_close))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_20ms_serve
</UL>

<P><STRONG><a name="[b2]"></a>pit_init</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, kea128_pit.o(i.pit_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pit_init
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bc]"></a>pit_time_get</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, kea128_pit.o(i.pit_time_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pit_time_get
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_20ms_serve
</UL>

<P><STRONG><a name="[ba]"></a>pit_time_start</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, kea128_pit.o(i.pit_time_start))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_20ms_serve
</UL>

<P><STRONG><a name="[7e]"></a>port_pull</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, kea128_port.o(i.port_pull))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = port_pull
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftm_count_mux
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encode_init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
</UL>

<P><STRONG><a name="[9e]"></a>servo_pid_caculate</STRONG> (Thumb, 286 bytes, Stack size 32 bytes, control.o(i.servo_pid_caculate))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = servo_pid_caculate &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bell_Cry
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control
</UL>

<P><STRONG><a name="[8f]"></a>show_8_L</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, myui.o(i.show_8_L))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = show_8_L &rArr; Cache_OLED_printf &rArr; Cache_OLED_P6x8Str
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_printf
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_Rectangle
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_UI
</UL>

<P><STRONG><a name="[90]"></a>show_circle</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, myui.o(i.show_circle))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = show_circle &rArr; Cache_OLED_printf &rArr; Cache_OLED_P6x8Str
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_UI
</UL>

<P><STRONG><a name="[8e]"></a>show_one_sensor</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, myui.o(i.show_one_sensor))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = show_one_sensor &rArr; Cache_OLED_printf &rArr; Cache_OLED_P6x8Str
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_printf
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_Rectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_UI
</UL>

<P><STRONG><a name="[91]"></a>show_run_time</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, myui.o(i.show_run_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = show_run_time &rArr; Cache_OLED_printf &rArr; Cache_OLED_P6x8Str
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_UI
</UL>

<P><STRONG><a name="[8d]"></a>show_sensor</STRONG> (Thumb, 308 bytes, Stack size 8 bytes, myui.o(i.show_sensor))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = show_sensor &rArr; Cache_OLED_P6x8floatNum &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_Rectangle
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_P6x8floatNum
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_OLED_P6x8Num
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_UI
</UL>

<P><STRONG><a name="[b9]"></a>systick_delay</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, kea128_systick.o(i.systick_delay))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
</UL>

<P><STRONG><a name="[77]"></a>systick_delay_ms</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, kea128_systick.o(i.systick_delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = systick_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_menu
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Servo_menu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right_Motor_menu
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left_Motor_menu
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Speed
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Servo
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Right_motor
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Left_motor
</UL>

<P><STRONG><a name="[b5]"></a>time_10ms_serve</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, main.o(i.time_10ms_serve))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = time_10ms_serve &rArr; OLED_ConfigParameter &rArr; Change_UI &rArr; Speed_menu &rArr; ChangeParameterVal &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ConfigParameter
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Inquire_data
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Car_Gather_Data_Key
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_Update_OLED
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b6]"></a>time_20ms_serve</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, main.o(i.time_20ms_serve))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = time_20ms_serve &rArr; vcan_sendware &rArr; uart_putbuff
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_time_start
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_time_get
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_close
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcan_sendware
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b1]"></a>uart_init</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, kea128_uart.o(i.uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = uart_init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_mux
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[be]"></a>uart_mux</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, kea128_uart.o(i.uart_mux))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[bf]"></a>uart_putbuff</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, kea128_uart.o(i.uart_putbuff))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uart_putbuff
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcan_sendware
</UL>

<P><STRONG><a name="[c0]"></a>uart_putchar</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, kea128_uart.o(i.uart_putchar))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putbuff
</UL>

<P><STRONG><a name="[a3]"></a>update_1cm_error</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, sensor.o(i.update_1cm_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = update_1cm_error &rArr; __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deal_sensor
</UL>

<P><STRONG><a name="[bb]"></a>vcan_sendware</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, debug.o(i.vcan_sendware))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = vcan_sendware &rArr; uart_putbuff
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putbuff
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_20ms_serve
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[7f]"></a>OLED_DLY_ms</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, oled.o(i.OLED_DLY_ms))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
</UL>

<P><STRONG><a name="[5d]"></a>OLED_Set_Pos</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, oled.o(i.OLED_Set_Pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OLED_Set_Pos &rArr; OLED_WriteCmd &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WriteCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_P6x8Str
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_Update_OLED
</UL>

<P><STRONG><a name="[79]"></a>OLED_WriteCmd</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, oled.o(i.OLED_WriteCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OLED_WriteCmd &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Set_Pos
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_CLS
</UL>

<P><STRONG><a name="[5e]"></a>OLED_WriteData</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, oled.o(i.OLED_WriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OLED_WriteData &rArr; gpio_set
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_P6x8Str
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Fill
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_CLS
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cache_Update_OLED
</UL>

<P><STRONG><a name="[b4]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, main.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b3]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, main.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[97]"></a>_fp_digits</STRONG> (Thumb, 344 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[94]"></a>_printf_core</STRONG> (Thumb, 1754 bytes, Stack size 128 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0snprintf
</UL>

<P><STRONG><a name="[9a]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[99]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2a]"></a>_snputc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, printfa.o(i._snputc))
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0snprintf)
</UL>
<P><STRONG><a name="[2b]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> printfa.o(i.__0sprintf)
<LI> printfa.o(i.__0vsprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
